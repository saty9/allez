# Generated by Django 2.0.5 on 2018-09-20 08:26

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='AddCompetitor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sequence', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(choices=[('AFG', 'Afghanistan'), ('ALB', 'Albania'), ('DZA', 'Algeria'), ('ASM', 'American Samoa'), ('AND', 'Andorra'), ('AGO', 'Angola'), ('AIA', 'Anguilla'), ('ATA', 'Antarctica'), ('ATG', 'Antigua and Barbuda'), ('ARG', 'Argentina'), ('ARM', 'Armenia'), ('ABW', 'Aruba'), ('AUS', 'Australia'), ('AUT', 'Austria'), ('AZE', 'Azerbaijan'), ('BHS', 'Bahamas'), ('BHR', 'Bahrain'), ('BGD', 'Bangladesh'), ('BRB', 'Barbados'), ('BLR', 'Belarus'), ('BEL', 'Belgium'), ('BLZ', 'Belize'), ('BEN', 'Benin'), ('BMU', 'Bermuda'), ('BTN', 'Bhutan'), ('BOL', 'Bolivia (Plurinational State of)'), ('BES', 'Bonaire, Sint Eustatius and Saba'), ('BIH', 'Bosnia and Herzegovina'), ('BWA', 'Botswana'), ('BVT', 'Bouvet Island'), ('BRA', 'Brazil'), ('IOT', 'British Indian Ocean Territory'), ('VGB', 'British Virgin Islands'), ('BRN', 'Brunei Darussalam'), ('BGR', 'Bulgaria'), ('BFA', 'Burkina Faso'), ('BDI', 'Burundi'), ('CPV', 'Cabo Verde'), ('KHM', 'Cambodia'), ('CMR', 'Cameroon'), ('CAN', 'Canada'), ('CYM', 'Cayman Islands'), ('CAF', 'Central African Republic'), ('TCD', 'Chad'), ('CHL', 'Chile'), ('CHN', 'China'), ('HKG', 'China, Hong Kong Special Administrative Region'), ('MAC', 'China, Macao Special Administrative Region'), ('CXR', 'Christmas Island'), ('CCK', 'Cocos (Keeling) Islands'), ('COL', 'Colombia'), ('COM', 'Comoros'), ('COG', 'Congo'), ('COK', 'Cook Islands'), ('CRI', 'Costa Rica'), ('HRV', 'Croatia'), ('CUB', 'Cuba'), ('CUW', 'Curaçao'), ('CYP', 'Cyprus'), ('CZE', 'Czechia'), ('CIV', "Côte d'Ivoire"), ('PRK', "Democratic People's Republic of Korea"), ('COD', 'Democratic Republic of the Congo'), ('DNK', 'Denmark'), ('DJI', 'Djibouti'), ('DMA', 'Dominica'), ('DOM', 'Dominican Republic'), ('ECU', 'Ecuador'), ('EGY', 'Egypt'), ('SLV', 'El Salvador'), ('GNQ', 'Equatorial Guinea'), ('ERI', 'Eritrea'), ('EST', 'Estonia'), ('ETH', 'Ethiopia'), ('FLK', 'Falkland Islands (Malvinas)'), ('FRO', 'Faroe Islands'), ('FJI', 'Fiji'), ('FIN', 'Finland'), ('FRA', 'France'), ('GUF', 'French Guiana'), ('PYF', 'French Polynesia'), ('ATF', 'French Southern Territories'), ('GAB', 'Gabon'), ('GMB', 'Gambia'), ('GEO', 'Georgia'), ('DEU', 'Germany'), ('GHA', 'Ghana'), ('GIB', 'Gibraltar'), ('GRC', 'Greece'), ('GRL', 'Greenland'), ('GRD', 'Grenada'), ('GLP', 'Guadeloupe'), ('GUM', 'Guam'), ('GTM', 'Guatemala'), ('GGY', 'Guernsey'), ('GIN', 'Guinea'), ('GNB', 'Guinea-Bissau'), ('GUY', 'Guyana'), ('HTI', 'Haiti'), ('HMD', 'Heard Island and McDonald Islands'), ('VAT', 'Holy See'), ('HND', 'Honduras'), ('HUN', 'Hungary'), ('ISL', 'Iceland'), ('IND', 'India'), ('IDN', 'Indonesia'), ('IRN', 'Iran (Islamic Republic of)'), ('IRQ', 'Iraq'), ('IRL', 'Ireland'), ('IMN', 'Isle of Man'), ('ISR', 'Israel'), ('ITA', 'Italy'), ('JAM', 'Jamaica'), ('JPN', 'Japan'), ('JEY', 'Jersey'), ('JOR', 'Jordan'), ('KAZ', 'Kazakhstan'), ('KEN', 'Kenya'), ('KIR', 'Kiribati'), ('KWT', 'Kuwait'), ('KGZ', 'Kyrgyzstan'), ('LAO', "Lao People's Democratic Republic"), ('LVA', 'Latvia'), ('LBN', 'Lebanon'), ('LSO', 'Lesotho'), ('LBR', 'Liberia'), ('LBY', 'Libya'), ('LIE', 'Liechtenstein'), ('LTU', 'Lithuania'), ('LUX', 'Luxembourg'), ('MDG', 'Madagascar'), ('MWI', 'Malawi'), ('MYS', 'Malaysia'), ('MDV', 'Maldives'), ('MLI', 'Mali'), ('MLT', 'Malta'), ('MHL', 'Marshall Islands'), ('MTQ', 'Martinique'), ('MRT', 'Mauritania'), ('MUS', 'Mauritius'), ('MYT', 'Mayotte'), ('MEX', 'Mexico'), ('FSM', 'Micronesia (Federated States of)'), ('MCO', 'Monaco'), ('MNG', 'Mongolia'), ('MNE', 'Montenegro'), ('MSR', 'Montserrat'), ('MAR', 'Morocco'), ('MOZ', 'Mozambique'), ('MMR', 'Myanmar'), ('NAM', 'Namibia'), ('NRU', 'Nauru'), ('NPL', 'Nepal'), ('NLD', 'Netherlands'), ('NCL', 'New Caledonia'), ('NZL', 'New Zealand'), ('NIC', 'Nicaragua'), ('NER', 'Niger'), ('NGA', 'Nigeria'), ('NIU', 'Niue'), ('NFK', 'Norfolk Island'), ('MNP', 'Northern Mariana Islands'), ('NOR', 'Norway'), ('OMN', 'Oman'), ('PAK', 'Pakistan'), ('PLW', 'Palau'), ('PAN', 'Panama'), ('PNG', 'Papua New Guinea'), ('PRY', 'Paraguay'), ('PER', 'Peru'), ('PHL', 'Philippines'), ('PCN', 'Pitcairn'), ('POL', 'Poland'), ('PRT', 'Portugal'), ('PRI', 'Puerto Rico'), ('QAT', 'Qatar'), ('KOR', 'Republic of Korea'), ('MDA', 'Republic of Moldova'), ('ROU', 'Romania'), ('RUS', 'Russian Federation'), ('RWA', 'Rwanda'), ('REU', 'Réunion'), ('BLM', 'Saint Barthélemy'), ('SHN', 'Saint Helena'), ('KNA', 'Saint Kitts and Nevis'), ('LCA', 'Saint Lucia'), ('MAF', 'Saint Martin (French Part)'), ('SPM', 'Saint Pierre and Miquelon'), ('VCT', 'Saint Vincent and the Grenadines'), ('WSM', 'Samoa'), ('SMR', 'San Marino'), ('STP', 'Sao Tome and Principe'), ('SAU', 'Saudi Arabia'), ('SEN', 'Senegal'), ('SRB', 'Serbia'), ('SYC', 'Seychelles'), ('SLE', 'Sierra Leone'), ('SGP', 'Singapore'), ('SXM', 'Sint Maarten (Dutch part)'), ('SVK', 'Slovakia'), ('SVN', 'Slovenia'), ('SLB', 'Solomon Islands'), ('SOM', 'Somalia'), ('ZAF', 'South Africa'), ('SGS', 'South Georgia and the South Sandwich Islands'), ('SSD', 'South Sudan'), ('ESP', 'Spain'), ('LKA', 'Sri Lanka'), ('PSE', 'State of Palestine'), ('SDN', 'Sudan'), ('SUR', 'Suriname'), ('SJM', 'Svalbard and Jan Mayen Islands'), ('SWZ', 'Swaziland'), ('SWE', 'Sweden'), ('CHE', 'Switzerland'), ('SYR', 'Syrian Arab Republic'), ('TJK', 'Tajikistan'), ('THA', 'Thailand'), ('MKD', 'The former Yugoslav Republic of Macedonia'), ('TLS', 'Timor-Leste'), ('TGO', 'Togo'), ('TKL', 'Tokelau'), ('TON', 'Tonga'), ('TTO', 'Trinidad and Tobago'), ('TUN', 'Tunisia'), ('TUR', 'Turkey'), ('TKM', 'Turkmenistan'), ('TCA', 'Turks and Caicos Islands'), ('TUV', 'Tuvalu'), ('UGA', 'Uganda'), ('UKR', 'Ukraine'), ('ARE', 'United Arab Emirates'), ('GBR', 'United Kingdom of Great Britain and Northern Ireland'), ('TZA', 'United Republic of Tanzania'), ('UMI', 'United States Minor Outlying Islands'), ('VIR', 'United States Virgin Islands'), ('USA', 'United States of America'), ('URY', 'Uruguay'), ('UZB', 'Uzbekistan'), ('VUT', 'Vanuatu'), ('VEN', 'Venezuela (Bolivarian Republic of)'), ('VNM', 'Viet Nam'), ('WLF', 'Wallis and Futuna Islands'), ('ESH', 'Western Sahara'), ('YEM', 'Yemen'), ('ZMB', 'Zambia'), ('ZWE', 'Zimbabwe'), ('ALA', 'Åland Islands')], max_length=3)),
            ],
        ),
        migrations.CreateModel(
            name='AddStage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('where', models.CharField(choices=[('TOP', 'Top of Rankings'), ('BOT', 'Bottom of Rankings')], default='TOP', max_length=3)),
                ('run', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Club',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('address', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.Address')),
            ],
        ),
        migrations.CreateModel(
            name='Competition',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('name', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Competitor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('license_number', models.CharField(max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='CullStage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField(default=None, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DeSeed',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seed', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='DeStage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('target', models.IntegerField(default=1)),
                ('fight_down_to', models.IntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='DeTable',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('winners', models.BooleanField(default=True)),
                ('complete', models.BooleanField(default=False)),
                ('de', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.DeStage')),
                ('parent', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='children', to='main.DeTable')),
            ],
        ),
        migrations.CreateModel(
            name='DeTableEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(default=0)),
                ('victory', models.BooleanField(default=False)),
                ('table_pos', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Entry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('finishing_place', models.IntegerField(default=None, null=True)),
                ('state', models.CharField(choices=[('EX', 'Excluded'), ('WI', 'Did Not Finish'), ('NC', 'Not Checked In'), ('CI', 'Checked In'), ('NS', 'Did Not Start')], default='NC', max_length=2)),
                ('club', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, to='main.Club')),
                ('competition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Competition')),
                ('competitor', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.Competitor')),
            ],
            options={
                'get_latest_by': 'competition__date',
            },
        ),
        migrations.CreateModel(
            name='Organisation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('email', models.EmailField(max_length=254)),
                ('contactNumber', models.CharField(max_length=15)),
                ('slug', models.SlugField(unique=True)),
                ('address', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.Address')),
            ],
        ),
        migrations.CreateModel(
            name='OrganisationMembership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_active', models.DateTimeField(auto_now_add=True)),
                ('state', models.CharField(choices=[('MG', 'Manager'), ('DT', 'DT'), ('AP', 'AP')], default='AP', max_length=2)),
                ('organisation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Organisation')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Pool',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='PoolBout',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scoreA', models.IntegerField()),
                ('victoryA', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='PoolEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField()),
                ('entry', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.Entry')),
                ('pool', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Pool')),
            ],
        ),
        migrations.CreateModel(
            name='PoolStage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('carry_previous_results', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Referee',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('competition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Competition')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Stage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('POO', 'Pool'), ('DEL', 'Direct Elimination'), ('CUL', 'Cull'), ('ADD', 'Add Fencers')], max_length=3)),
                ('state', models.CharField(choices=[('STD', 'Not Started'), ('RDY', 'Ready to Start'), ('GO', 'Running'), ('FIN', 'Finished'), ('LCK', 'Finished and Confirmed')], default='STD', max_length=3)),
                ('number', models.IntegerField()),
                ('competition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Competition')),
            ],
            options={
                'get_latest_by': 'number',
            },
        ),
        migrations.AddField(
            model_name='poolstage',
            name='stage',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Stage'),
        ),
        migrations.AddField(
            model_name='poolbout',
            name='fencerA',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='fencerA_bout_set', to='main.PoolEntry'),
        ),
        migrations.AddField(
            model_name='poolbout',
            name='fencerB',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='fencerB_bout_set', to='main.PoolEntry'),
        ),
        migrations.AddField(
            model_name='pool',
            name='referee',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='main.Referee'),
        ),
        migrations.AddField(
            model_name='pool',
            name='stage',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='main.PoolStage'),
        ),
        migrations.AddField(
            model_name='entry',
            name='exited_at_stage',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.Stage'),
        ),
        migrations.AddField(
            model_name='detableentry',
            name='entry',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='main.Entry'),
        ),
        migrations.AddField(
            model_name='detableentry',
            name='referee',
            field=models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.PROTECT, to='main.Referee'),
        ),
        migrations.AddField(
            model_name='detableentry',
            name='table',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.DeTable'),
        ),
        migrations.AddField(
            model_name='destage',
            name='stage',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Stage'),
        ),
        migrations.AddField(
            model_name='deseed',
            name='de',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.DeStage'),
        ),
        migrations.AddField(
            model_name='deseed',
            name='entry',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Entry'),
        ),
        migrations.AddField(
            model_name='cullstage',
            name='stage',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Stage'),
        ),
        migrations.AddField(
            model_name='competitor',
            name='organisation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Organisation'),
        ),
        migrations.AddField(
            model_name='competition',
            name='organisation',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Organisation'),
        ),
        migrations.AddField(
            model_name='addstage',
            name='stage',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Stage'),
        ),
        migrations.AddField(
            model_name='addcompetitor',
            name='entry',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.Entry'),
        ),
        migrations.AddField(
            model_name='addcompetitor',
            name='stage',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.AddStage'),
        ),
        migrations.AlterUniqueTogether(
            name='stage',
            unique_together={('number', 'competition')},
        ),
        migrations.AlterUniqueTogether(
            name='poolentry',
            unique_together={('entry', 'pool'), ('pool', 'number')},
        ),
        migrations.AlterUniqueTogether(
            name='poolbout',
            unique_together={('fencerA', 'fencerB')},
        ),
        migrations.AlterUniqueTogether(
            name='entry',
            unique_together={('competition', 'competitor')},
        ),
    ]
